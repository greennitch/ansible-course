#the following play is just a trick to have db related host vars available
- name: all hosts vars are loaded
  hosts: db, app
  tasks: []
- name: play to retrieve ip of db
  hosts: localhost
  tasks:
  - name: DB Ip address is retrieved
    shell: "docker inspect --format '{''{ .NetworkSettings.IPAddress }''}' db"
    register: found_ip
  - name: found ip debug
    debug:
      msg: "found ip is {{ found_ip.stdout }}"
  - name: DB Ip address is saved as host variable
    set_fact:
      db_ip: "{{ found_ip.stdout }}"
- name: play backend
  hosts: app
  become: yes
  tags:
  - be-pre-build
  tasks:
  - name: go is installed
    import_role:
      name: abdennour.golang
    vars:
      golang_version: "1.14"
      golang_packages:
      - github.com/gorilla/mux
      - go.mongodb.org/mongo-driver/mongo
      golang_users:
      - "{{ ansible_ssh_user }}"
    become: yes
- name: play backend be-build
  hosts: app
  become: yes
  vars:
    be_build_workspace: /opt/build_dir
    be_build_repo_url: https://github.com/kubernetes-tn/go-to-do-app.git
    be_repo_name: go-to-do-app
  tags:
  - be-build
  tasks: 
  - name: installation folder exist
    file:
      path: "{{ be_build_workspace }}"
      state: directory
  - name: deleted existing repo
    file:
      path: "{{ be_build_workspace }}/{{ be_repo_name }}"
      state: absent
  - name: git checkout
    git:
      repo: "{{ be_build_repo_url }}"
      dest: "{{ be_build_workspace }}/{{ be_repo_name }}"
  - name: app code is patched to accept uri
    copy:
      src: ../files/middleware.go
      dest: "{{ be_build_workspace }}/{{ be_repo_name }}/server/middleware/middleware.go"
  - name: go build
    shell: . /etc/profile ; go build -o {{ be_tmp_bin }}
    args:
      chdir:  "{{ be_build_workspace }}/{{ be_repo_name }}/server"
- name: play backend be-deploy
  hosts: app
  become: yes
  tags:
  - be-deploy
  tasks:
  - name: systemd service is generated
    template:
      src: todo.service.j2
      dest: /lib/systemd/system/todo.service
    notify: systemd reloaded
  - name: todo env file is generated
    include_tasks: tasks/backend_env_file.yaml
  - name: backend is deployed
    copy:
      src: "{{ be_tmp_bin }}"
      dest: "{{ be_prod_bin }}"
      mode: a+x
      remote_src: yes
    notify: backend restarted
  handlers:
  - name: systemd reloaded
    systemd:
      daemon_reload: yes
  - name: backend restarted
    service:
      name: todo
      state: restarted

